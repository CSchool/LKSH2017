<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="1" short-name="multiplication" url="https://polygon.codeforces.com/p/TsarN/multiplication">
    <names>
        <name language="russian" value="Таблица умножения"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="russian" path="statements/russian/problem.tex" type="application/x-tex"/>
        <statement language="russian" path="statements/.pdf/russian/problem.pdf" type="application/pdf"/>
        <statement charset="UTF-8" language="russian" path="statements/.html/russian/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz" cpu-speed="3600" input-file="" output-file="">
        <testset name="tests">
            <time-limit>1000</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>28</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" sample="true"/>
                <test cmd="gen 10 1 multiplication" method="generated"/>
                <test cmd="gen 10 2 multiplication" method="generated"/>
                <test cmd="gen 10 3 multiplication" method="generated"/>
                <test cmd="gen 10 4 multiplication" method="generated"/>
                <test cmd="gen 10 5 multiplication" method="generated"/>
                <test cmd="gen 10 6 multiplication" method="generated"/>
                <test cmd="gen 10 7 multiplication" method="generated"/>
                <test cmd="gen 10 8 multiplication" method="generated"/>
                <test cmd="gen 100 9 multiplication" method="generated"/>
                <test cmd="gen 100 10 multiplication" method="generated"/>
                <test cmd="gen 100 11 multiplication" method="generated"/>
                <test cmd="gen 100 12 multiplication" method="generated"/>
                <test cmd="gen 100 13 multiplication" method="generated"/>
                <test cmd="gen 100 14 multiplication" method="generated"/>
                <test cmd="gen 100 15 multiplication" method="generated"/>
                <test cmd="gen 100 16 multiplication" method="generated"/>
                <test cmd="gen 1000 17 multiplication" method="generated"/>
                <test cmd="gen 1000 18 multiplication" method="generated"/>
                <test cmd="gen 1000 19 multiplication" method="generated"/>
                <test cmd="gen 1000 20 multiplication" method="generated"/>
                <test cmd="gen 1000 21 multiplication" method="generated"/>
                <test cmd="gen 1000 22 multiplication" method="generated"/>
                <test cmd="gen 1000 23 multiplication" method="generated"/>
                <test cmd="gen 1000 24 multiplication" method="generated"/>
                <test method="manual"/>
                <test method="manual"/>
                <test method="manual"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen.cpp" type="cpp.g++"/>
                <binary path="files/gen.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <solutions>
            <solution tag="main">
                <source path="solutions/solve.cpp" type="cpp.g++"/>
                <binary path="solutions/solve.exe" type="exe.win32"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
</problem>
